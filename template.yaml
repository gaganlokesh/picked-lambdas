AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: >
  picked-lambdas

  SAM Template for picked-lambdas

Parameters:
  WebhookSecret:
    Type: String
  ImageBucketName:
    Type: String
    Default: "picked-dev"
  ImageBucketRegion:
    Type: String
    Default: "ap-south-1"
  CallbackUrl:
    Type: String
  CallbackSecret:
    Type: String

Resources:
#############################################################################
#  API GATEWAY                                                               #
#############################################################################
  ApiGateway:
    Type: AWS::Serverless::Api
    Properties:
      Name: !Sub "${AWS::StackName}-api"
      StageName: "Prod"
      DefinitionBody:
        Fn::Transform:
            Name: "AWS::Include"
            Parameters:
              Location: api.yaml

#############################################################################
#  STEP FUNCTIONS                                                           #
#############################################################################
  FeedContentProcessorStateMachine:
    Type: AWS::Serverless::StateMachine
    Properties:
      DefinitionUri: statemachine/feed-content-processor.asl.json
      Type: EXPRESS
      DefinitionSubstitutions:
        WebhookFunctionArn: !GetAtt WebhookFunction.Arn
        ArticleScraperFunctionArn: !GetAtt ArticleScraperFunction.Arn
        ImageHandlerFunctionArn: !GetAtt ImageHandlerFunction.Arn
        NotifierFunctionArn: !GetAtt NotifierFunction.Arn
      Role: !GetAtt FeedContentProcessorStateMachineRole.Arn
      Logging:
        Destinations:
          - CloudWatchLogsLogGroup:
              LogGroupArn: !GetAtt FeedContentProcessorStateMachineLogGroup.Arn
        IncludeExecutionData: false
        Level: "ALL"

#############################################################################
#  LAMBDA FUNCTIONS                                                         #
#############################################################################
  WebhookFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: functions/webhook/
      Handler: app.webhook
      Runtime: nodejs14.x
      Environment:
        Variables:
          WEBHOOK_SECRET: !Ref WebhookSecret

  ArticleScraperFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: functions/article-scraper/
      Handler: app.scraper
      Layers:
        - !Ref ScraperDepsLayer
      Runtime: nodejs14.x
      Timeout: 50
      MemorySize: 1024

  ImageHandlerFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: functions/image-handler/
      Handler: app.imageHandler
      Runtime: nodejs14.x
      Timeout: 60
      Policies:
        - S3CrudPolicy:
            BucketName: !Sub "${ImageBucketName}"
      Environment:
        Variables:
          BUCKET_NAME: !Ref ImageBucketName
          BUCKET_REGION: !Ref ImageBucketRegion

  NotifierFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: functions/notifier/
      Handler: app.notifier
      Runtime: nodejs14.x
      Timeout: 60
      Environment:
        Variables:
          CALLBACK_URL: !Ref CallbackUrl
          CALLBACK_SECRET: !Ref CallbackSecret

  SiteScraperFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: functions/site-scraper/
      Handler: app.siteScraper
      Layers:
        - !Ref ScraperDepsLayer
      Runtime: nodejs14.x
      Timeout: 60
      MemorySize: 740

#############################################################################
#  LAMBDA LAYERS                                                            #
#############################################################################
  ScraperDepsLayer:
    Type: AWS::Serverless::LayerVersion
    Properties:
      CompatibleRuntimes:
        - nodejs14.x
      ContentUri: layers/scraper-deps/
      Description: Dependencies for web scraping
      LayerName: ScraperDepsLayer
    Metadata:
      BuildMethod: nodejs14.x

#############################################################################
#  IAM ROLES                                                                #
#############################################################################
  ApiGatewayRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                Fn::Sub: apigateway.${AWS::Region}.amazonaws.com
            Action: sts:AssumeRole
      Path: /
      Policies:
        - PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - "logs:*"
                Resource: "*"
          PolicyName: Logging
        - PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - "states:StartExecution"
                Resource: !Ref FeedContentProcessorStateMachine
          PolicyName: StartExecution

  FeedContentProcessorStateMachineRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                Fn::Sub: states.${AWS::Region}.amazonaws.com
            Action: sts:AssumeRole
      Path: /
      Policies:
        - PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - "logs:*"
                Resource: "*"
                Sid: Logs
          PolicyName: Logging
        - PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - "lambda:InvokeFunction"
                Resource:
                  - !GetAtt WebhookFunction.Arn
                  - !GetAtt ArticleScraperFunction.Arn
                  - !GetAtt ImageHandlerFunction.Arn
                  - !GetAtt NotifierFunction.Arn
          PolicyName: LambdaInvoke

#############################################################################
#  LOG GROUPS                                                               #
#############################################################################
  ApiGatewayLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub "/aws/lambda/${AWS::StackName}-ApiGateway"
      RetentionInDays: 30

  FeedContentProcessorStateMachineLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub "/aws/lambda/${AWS::StackName}-FeedContentProcessorStateMachine"
      RetentionInDays: 30

#############################################################################
#  OUTPUTS                                                                  #
#############################################################################
Outputs:
  FeedContentProcessorStateMachineArn:
    Description: "Feed Content Processing state machine ARN"
    Value: !Ref FeedContentProcessorStateMachine
  FeedContentProcessorStateMachineRole:
    Description: "IAM Role created for Feed Content Processing state machine based on the specified SAM Policy Templates"
    Value: !GetAtt FeedContentProcessorStateMachineRole.Arn
